# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: cluster.proto for package 'event_store.cluster'

require 'grpc'
require 'cluster_pb'

module EventStore
  module Cluster
    module Gossip
      class Service

        include GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'event_store.cluster.Gossip'

        rpc :Update, ::EventStore::Cluster::GossipRequest, ::EventStore::Cluster::ClusterInfo
        rpc :Read, ::EventStore::Client::Shared::Empty, ::EventStore::Cluster::ClusterInfo
      end

      Stub = Service.rpc_stub_class
    end
    module Elections
      class Service

        include GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'event_store.cluster.Elections'

        rpc :ViewChange, ::EventStore::Cluster::ViewChangeRequest, ::EventStore::Client::Shared::Empty
        rpc :ViewChangeProof, ::EventStore::Cluster::ViewChangeProofRequest, ::EventStore::Client::Shared::Empty
        rpc :Prepare, ::EventStore::Cluster::PrepareRequest, ::EventStore::Client::Shared::Empty
        rpc :PrepareOk, ::EventStore::Cluster::PrepareOkRequest, ::EventStore::Client::Shared::Empty
        rpc :Proposal, ::EventStore::Cluster::ProposalRequest, ::EventStore::Client::Shared::Empty
        rpc :Accept, ::EventStore::Cluster::AcceptRequest, ::EventStore::Client::Shared::Empty
        rpc :LeaderIsResigning, ::EventStore::Cluster::LeaderIsResigningRequest, ::EventStore::Client::Shared::Empty
        rpc :LeaderIsResigningOk, ::EventStore::Cluster::LeaderIsResigningOkRequest, ::EventStore::Client::Shared::Empty
      end

      Stub = Service.rpc_stub_class
    end
  end
end

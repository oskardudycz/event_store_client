# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: projections.proto for package 'event_store.client.projections'

require 'grpc'
require 'projections_pb'

module EventStore
  module Client
    module Projections
      module Projections
        class Service

          include GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = 'event_store.client.projections.Projections'

          rpc :Create, ::EventStore::Client::Projections::CreateReq, ::EventStore::Client::Projections::CreateResp
          rpc :Update, ::EventStore::Client::Projections::UpdateReq, ::EventStore::Client::Projections::UpdateResp
          rpc :Delete, ::EventStore::Client::Projections::DeleteReq, ::EventStore::Client::Projections::DeleteResp
          rpc :Statistics, ::EventStore::Client::Projections::StatisticsReq, stream(::EventStore::Client::Projections::StatisticsResp)
          rpc :Disable, ::EventStore::Client::Projections::DisableReq, ::EventStore::Client::Projections::DisableResp
          rpc :Enable, ::EventStore::Client::Projections::EnableReq, ::EventStore::Client::Projections::EnableResp
          rpc :Reset, ::EventStore::Client::Projections::ResetReq, ::EventStore::Client::Projections::ResetResp
          rpc :State, ::EventStore::Client::Projections::StateReq, ::EventStore::Client::Projections::StateResp
          rpc :Result, ::EventStore::Client::Projections::ResultReq, ::EventStore::Client::Projections::ResultResp
          rpc :RestartSubsystem, ::EventStore::Client::Shared::Empty, ::EventStore::Client::Shared::Empty
        end

        Stub = Service.rpc_stub_class
      end
    end
  end
end
